(()=>{"use strict";var __webpack_modules__={575:()=>{eval("\n;// CONCATENATED MODULE: ./src/modules/addToCart.js\nconst addToCart = (id) => { //заносим в корзину\n    const goods = JSON.parse(localStorage.getItem('goods'))\n    const clickedGood = goods.find(good => good.id === id) // ищем совпадения по id\n    const cart = localStorage.getItem('cart')\n        ? JSON.parse(localStorage.getItem('cart'))\n        : []\n    if (cart.some(good => good.id === clickedGood.id)) {//если ли товар в корзине some(ищет хоть 1событие)\n        cart.map(good => {\n            if (good.id === clickedGood.id) { //если в корзине уже есть этот товар увеличиваем\n                good.count++\n            }\n            return good\n        })\n    } else {\n        clickedGood.count = 1\n        cart.push(clickedGood)\n    }\n\n    localStorage.setItem('cart', JSON.stringify(cart))\n}\n\n/* harmony default export */ const modules_addToCart = (addToCart);\n;// CONCATENATED MODULE: ./src/modules/changeCart.js\n\n\n\nconst deleteCartItem = (id) => { //удаляем из корзины товары\n    const cart = JSON.parse(localStorage.getItem('cart'))\n\n    const newCart = cart.filter(good => {\n        return good.id !== id\n    })\n    localStorage.setItem('cart', JSON.stringify(newCart))\n    modules_renderCartDoods(JSON.parse(localStorage.getItem('cart')))\n}\n\nconst plusCartItem = (id) => { // прибалляем кол-во товара в корзине и меняем цену\n    const cart = JSON.parse(localStorage.getItem('cart'))\n\n    const newCart = cart.map(good => {\n        if (good.id === id) {\n            good.count++\n        }\n        return good\n    })\n    localStorage.setItem('cart', JSON.stringify(newCart))\n    modules_renderCartDoods(JSON.parse(localStorage.getItem('cart')))\n}\n\nconst minusCartItem = (id) => {\n    const cart = JSON.parse(localStorage.getItem('cart'))\n\n    const newCart = cart.map(good => {\n        if (good.id === id) {\n            if (good.count > 0)\n                good.count--\n\n        }\n        return good\n    })\n    localStorage.setItem('cart', JSON.stringify(newCart))\n    modules_renderCartDoods(JSON.parse(localStorage.getItem('cart')))\n}\n\n;// CONCATENATED MODULE: ./src/modules/renderCartDoods.js\n\n\n\n\n\nconst renderCartDoods = (goods) => { //рендерим новую корзину\n    const cartTable = document.querySelector('.cart-table__goods')\n    cartTable.innerHTML = ''\n    goods.forEach(good => {\n        const tr = document.createElement('tr')\n        tr.innerHTML = `\n                    <td>${good.name}</td>\n\t\t\t\t\t<td>${good.price}$</td>\n\t\t\t\t\t<td><button class=\"cart-btn-minus\"\">-</button></td>\n\t    \t\t\t<td>${good.count}</td>\n\t\t\t\t\t<td><button class=\"cart-btn-plus\"\">+</button></td>\n\t\t\t\t\t<td>${+good.price * + good.count}$</td> \n\t\t\t\t\t<td><button class=\"cart-btn-delete\"\">x</button></td>\n    `\n        cartTable.append(tr) // добавляем в конец строку таблицы\n\n        tr.addEventListener('click', (e) => {\n            if (e.target.classList.contains('cart-btn-minus')) { //contains ищет в classList e.target  класс\n                minusCartItem(good.id)\n\n            } else if (e.target.classList.contains('cart-btn-plus')) {\n                plusCartItem(good.id)\n\n            } else if (e.target.classList.contains('cart-btn-delete')) {\n                deleteCartItem(good.id)\n            }\n        })\n    });\n}\n/* harmony default export */ const modules_renderCartDoods = (renderCartDoods);\n;// CONCATENATED MODULE: ./src/modules/cart.js\n\n\n\nconst cart_cart = () => {\n    const cartBtn = document.querySelector('.button-cart')\n    const modal = document.getElementById('modal-cart')\n    const modalClose = modal.querySelector('.modal-close')\n    const goodsContainer = document.querySelector('.long-goods-list')\n\n\n\n    cartBtn.addEventListener('click', () => { //рендер товара на основании функции addToCart\n        const cartArray = localStorage.getItem('cart') ?\n            JSON.parse(localStorage.getItem('cart')) : []\n        modules_renderCartDoods(cartArray)\n        modal.style.display = 'flex'\n    })\n\n    modalClose.addEventListener('click', () => {\n        modal.style.display = ''\n    })\n\n    modal.addEventListener('click', (e) => {\n        if (!e.target.closest('.modal') && e.target.classList.contains('overlay')) {\n            modal.style.display = ''\n        }\n    })\n\n    window.addEventListener('keydown', (e) => { //при клике на esc закрыть окно корзины\n        if (e.key === 'Escape') {\n            modal.style.display = ''\n        }\n    })\n\n    if (goodsContainer) {\n        goodsContainer.addEventListener('click', (e) => {\n            if (e.target.closest('.add-to-cart')) { //closest возвращает близжайший родительский элемент\n                const buttonToCart = e.target.closest('.add-to-cart')\n                const goodId = buttonToCart.dataset.id // берем id  всех детей \n                modules_addToCart(goodId)\n            }\n        })\n\n    }\n\n}\n/* harmony default export */ const modules_cart = (cart_cart);\n;// CONCATENATED MODULE: ./src/modules/renderGoods.js\nconst renderGoods = (array) => {\n\n    const goodsContainer = document.querySelector('.long-goods-list');\n\n    goodsContainer.innerHTML = ''; //делаем контейнер пустым чтобы потом наполнить карточки согласно фильтру\n    array.forEach(item => {\n        const goodBlock = document.createElement('div'); // создаем div\n\n        goodBlock.classList.add('col-lg-3'); //создаем 2 класса которые были указаны в карточках html\n        goodBlock.classList.add('col-sm-6');\n\n        //если нету лейбла то ставим d-node\n        goodBlock.innerHTML = `\n        <div class=\"goods-card\">\n            <span class=\"label ${item.label ? null : 'd-none'}\">${item.label}</span>  \n            <img src=\"db/${item.img}\" alt=\"${item.name}\" class=\"goods-image\"> \n            <h3 class =\"goods-title\">${item.name}</h3>\n            <p class =\"goods-description\">${item.description}</p>\n            <button class =\"button goods-card-btn add-to-cart\" data-id=\"${item.id}\">\n            <span class =\"button-price\">$${item.price}</span>\n            </button>\n        </div>\n        `; // у каждого иттерируемого элемента меняет значения\n\n        goodsContainer.append(goodBlock); // добавляем в конце контейнера блоки\n    })\n}\n\n/* harmony default export */ const modules_renderGoods = (renderGoods);\n;// CONCATENATED MODULE: ./src/modules/getGoods.js\n\n\n\nconst getGoods = () => {\n    const links = document.querySelectorAll('.navigation-link');\n    const more = document.querySelector('.more')\n\n    const getData = (value, category) => {\n        fetch('https://internet-platform-15a6d-default-rtdb.firebaseio.com/db.json')\n            .then((res) => res.json())\n            .then((data) => {\n                const array = category\n                    ? data.filter(item => item[category] === value) // если категория совпадает с линком который  ниже вывести необходимое\n                    : data; // у all нету категории, поэтому выводит все\n                localStorage.setItem('goods', JSON.stringify(array))\n\n                window.location.pathname !== \"/goods.html\"  //если не равно страницы с товаром перекинь и сделай рендер с фильрованного фильтра\n                    ? window.location.href = \"/goods.html\"\n                    : modules_renderGoods(array)\n\n            })\n    }\n\n\n    links.forEach((link) => {\n        link.addEventListener('click', (e) => {\n            e.preventDefault()\n            const linkValue = link.textContent;\n            const category = link.dataset.field;\n            getData(linkValue, category);\n\n        })\n    })\n    if (localStorage.getItem('goods') && window.location.pathname === 'goods.html') {\n        modules_renderGoods(JSON.parse(localStorage.getItem('goods')))\n    }\n    if (more) {\n        more.addEventListener('click', (e) => { //обработка кнопки \"показать все\" \n            e.preventDefault()\n            getData();\n\n        })\n    }\n}\n\n/* harmony default export */ const modules_getGoods = (getGoods);\n\n;// CONCATENATED MODULE: ./src/modules/search.js\n\n\n\nconst search = () => {\n    const input = document.querySelector('.search-block > input')\n    const searchBtn = document.querySelector('.search-block > button')\n\n\n    const getData = value => {\n        fetch('https://internet-platform-15a6d-default-rtdb.firebaseio.com/db.json')\n            .then((res) => res.json())\n            .then((data) => {\n                const array = data.filter(el => el.name.toLowerCase().includes(value))\n                console.log(array)\n                localStorage.setItem('goods', JSON.stringify(array))\n\n\n                window.location.pathname !== \"/goods.html\"  //если не равно страницы с товаром перекинь и сделай рендер с фильрованного фильтра\n                    ? window.location.href = \"/goods.html\"\n                    : modules_renderGoods(array)\n\n            })\n    }\n\n    searchBtn.addEventListener('click', () => {\n        getData(input.value)\n    })\n\n}\n/* harmony default export */ const modules_search = (search);\n;// CONCATENATED MODULE: ./src/modules/sendForm.js\nconst sendForm = () => {\n    const cartArr = JSON.parse(localStorage.getItem('cart'))\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'POST',\n        body: JSON.stringify({\n            cart: cartArr,\n            name: '',\n            phone: ''\n        })\n    }).then(() => {\n        localStorage.removeItem('cart')\n        cart.style.display = ''\n    })\n}\n\n\nconst modalForm = () => {\n    const modalForm = document.querySelector('.modal-form')\n    modalForm.addEventListener('submit', (e) => {\n        e.preventDefault()\n        sendForm()\n\n    })\n}\n\n\n;// CONCATENATED MODULE: ./src/goods.js\n\n\n\n\n\n\n\n\nmodules_cart();\nmodules_getGoods();\nmodules_search();\nmodules_renderGoods;\nmodules_addToCart;\ndeleteCartItem;\nmodules_renderCartDoods;\nplusCartItem;\nminusCartItem;\nmodalForm;\nsendForm;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///575\n")}},__webpack_exports__={};__webpack_modules__[575]()})();